name: üì¶ Publish Scoped Package

on:
  push:
    branches:
      - main
    paths:
      - 'packages/**'
      - '.github/workflows/publish.yml'

jobs:
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18]

    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4

      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org/'
          cache: 'pnpm'

      - name: üì¶ Install dependencies
        run: |
          corepack enable
          pnpm install --frozen-lockfile

      - name: üîç Build all packages
        run: pnpm run build
      

      - name: Bump Version (Only on Main)
        if: github.ref == 'refs/heads/main'
        run: |
            git status  # Debug step to verify clean working directory
            npm version patch -m "CI: Bump version to %s [skip ci]"
            git add . 
            git commit -m "chore: Commit untracked Version bump [skip ci]" || echo "No changes to commit"
            git push origin main 
            env:
            SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: üöÄ Publish packages
        run: |
          for pkg in ./packages/*; do
            if [ -f "$pkg/package.json" ]; then
              cd $pkg
              name=$(jq -r .name package.json)
              version=$(jq -r .version package.json)
              echo "üì¶ Publishing $name@$version"
              npm publish --access public || echo "‚ö†Ô∏è Skipping: $name (possibly already published)"
              cd -
            fi
          done
        env:
          2FACTOR_TOKEN: ${{ secrets.NPM_2FACTOR_TOKEN }} 
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}




# name: CI- abimongo_utils

# on:
#   push:
#     branches:
#       - main
#       - 'release/**'
      
#   pull_request:
#     branches: 
#       - main, 
#       - 'releases/**'

# jobs:
#   build-and-test:
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [22.x]

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v4
#         with:
#           node-version: ${{ matrix.node-version }}
#           registry-url: 'https://registry.npmjs.org'

#       - name: Install dependencies
#         run: npm ci
 
#       # - name: Lint
#       #   run: npm run lint

#       - name: Run tests
#         run: npm test

#       - name: Build package
#         run: npm run build
          
#       - name: Upload Build Artifacts
#         uses: actions/upload-artifact@v4
#         with:
#           name: abimongo_core-build-${{ github.run_number }}-${{ github.sha }}
#           path: |
#             ./dist
#             ./package.json
#             ./README.md
#             ./LICENSE
#           if-no-files-found: error
#           retention-days: 14
      
#       - name: Configure Git for SSH
#         run: |
#           git remote set-url origin git@github.com:${{ github.repository }}.git
      
#       - name: Configure Git
#         env:
#           GIT_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
#         run: |
#           git config user.email "${GITHUB_ACTOR}@users.noreply.github.com" 
#           git config user.name "$(gh api /users/${GITHUB_ACTOR} | jq .name -r)"
#           git config -l

#       - name: Add and Commit Changes
#         run: |
#           git add .
#           git commit -m "chore: Automated release [skip ci]" || echo "No changes to commit"
#           git push origin main
#         env:
#           GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
#           SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

#       - name: Prepare for npm Versioning
#         run: |
#           git add .
#           git commit -m "chore: Prepare for version bump [skip ci]" || echo "No changes to commit"
#           git push origin main
#         env:
#           SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

#       - name: Bump Version (Only on Main)
#         if: github.ref == 'refs/heads/main'
#         run: |
#           git status  # Debug step to verify clean working directory
#           npm version patch -m "CI: Bump version to %s [skip ci]"
#           git add . 
#           git commit -m "chore: Commit untracked Version bump [skip ci]" || echo "No changes to commit"
#           git push origin main 
#         env:
#           SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

#       - name: Publish to npm (Only on Main)
#         if: github.ref == 'refs/heads/main'
#         run: |
#           npm publish
#         env:
#           NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
